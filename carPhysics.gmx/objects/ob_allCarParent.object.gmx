<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ob_allParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocity=60;
turnDirection=0;
tireGrip=40;
oldTireRotation=0;
speedLimit=3.15;
accelHorsePower=6;



theTire= instance_create(x,y-sprite_height/4, ob_tire);
physics_joint_revolute_create(id,theTire,theTire.x,theTire.y,0,0,0,0,0,0,false);
theTire.depth=-1000;

deadWeight=instance_create(x,y+sprite_height/4,ob_junk);
physics_joint_revolute_create(id,deadWeight,deadWeight.x,deadWeight.y,0,0,0,0,0,0,false);
deadWeight.depth=-1000;

theMarker=instance_create(x,y+sprite_height/4,ob_marker);
theMarker.depth=-1000000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//phy_speed_y=0;
phy_position_y+=4;
//velocity=100;

if(speedLimit&gt;3.15){
speedLimit-=0.15;
}

//phy_position_y=phy_position_yprevious;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//road friction
/*
if(phy_speed_x&lt;0){
physics_apply_force(x, y, 10, 0);
}
if(phy_speed_x&gt;0){
physics_apply_force(x, y, -10, 0);
}
*/

//return tire
if(theTire.trueRotation&gt;0){
theTire.trueRotation-=theTire.trueRotation/10;
}
if(theTire.trueRotation&lt;0){
theTire.trueRotation-=theTire.trueRotation/10;
}



//get tire
theTire.phy_rotation=theTire.trueRotation +phy_rotation;


//mess around with speed limit and velocity for good feel
if(sqrt(sqr(phy_speed_y)+sqr(phy_speed_x))&gt;speedLimit){

phy_speed_x=phy_speed_x/1.05;
phy_speed_y=phy_speed_y/1.05;


}
//mabye being in math isnt so bad.
physics_apply_force(x+(dcos(image_angle+90)*(1+sprite_height/4)),y-(dsin(image_angle+90)*(1+sprite_height/4)),(dsin(theTire.phy_rotation)*velocity), (dcos(theTire.phy_rotation)*velocity)*-1);


theMarker.x=x+(dcos(image_angle+90)*(1+sprite_height/4));
theMarker.y=y-(dsin(image_angle+90)*(1+sprite_height/4));




//turnD 1=left, 2 = right
if(turnDirection==1){


}
if(turnDirection==2){


}

//tire grip real
/*
if(theTire.phy_rotation&lt;-20){

physics_apply_force(x, y-sprite_height/4,(dcos(theTire.image_angle)*tireGrip)*-1, (dsin(theTire.image_angle)*tireGrip));
}
if(theTire.phy_rotation&gt;20){

physics_apply_force(x, y-sprite_height/4,(dcos(theTire.image_angle)*tireGrip), (dsin(theTire.image_angle)*tireGrip)*-1);

}
//back tire anti driving side ways
if(phy_rotation&lt;-70){

physics_apply_force(x, y+sprite_height/4,(dcos(image_angle)*tireGrip)*-4, (dsin(image_angle)*tireGrip)*4);
}
if(phy_rotation&gt;70){

physics_apply_force(x, y+sprite_height/4,(dcos(image_angle)*tireGrip)*4, (dsin(image_angle)*tireGrip)*-4);
}


*/

///DUST CREATION

if(random(12)&lt;3){
instance_create(x+random(sprite_width)-sprite_width/2,y+sprite_height/4, ob_smokeBloom);
}

//tire

//instance_create(x+sprite_width/2,y+sprite_height/4, tireTrack);

//instance_create(x-sprite_width/2,y+sprite_height/4, tireTrack);

instance_create(x+sprite_width/2,y+sprite_height/4, ob_tireTrack);


instance_create(x-sprite_width/2,y+sprite_height/4, ob_tireTrack);






//phy_speed_y=-20;
//phy_angular_velocity=0;

/*
if(oldTireRotation-theTire.trueRotation&gt;0){

physics_apply_force(x, y-sprite_height/4,(dcos(theTire.image_angle)*tireGrip)*-1, (dsin(theTire.image_angle)*tireGrip));
//physics_apply_force(x, y-sprite_width/4, -tireGrip, 0);
}
if(oldTireRotation-theTire.trueRotation&lt;-0){

physics_apply_force(x, y-sprite_height/4,(dcos(theTire.image_angle)*tireGrip), (dsin(theTire.image_angle)*tireGrip)*-1);
//physics_apply_force(x, y-sprite_width/4, tireGrip, 0);
}
*/
//keep track of tire rotation
oldTireRotation=theTire.trueRotation;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>9.99999974737875E-5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>11</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
